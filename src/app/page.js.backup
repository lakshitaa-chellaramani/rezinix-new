// pages/index.js or app/page.js
'use client';

import { useState, useEffect, useRef } from 'react';
import { motion, useAnimation, useScroll, useTransform } from 'framer-motion';
import { useInView } from 'framer-motion';
import { 
  Shield, 
  Brain, 
  Zap, 
  Eye, 
  Lock, 
  Globe, 
  CheckCircle, 
  ArrowRight,
  Play,
  Star,
  Users,
  Award,
  Cpu,
  AlertTriangle,
  Activity,
  Database,
  Network,
  Search,
  Terminal,
  Fingerprint,
  Radar,
  Bug,
  ShieldCheck
} from 'lucide-react';
import Orb from "@/components/orb";
import MatrixBackground from '@/components/MatrixBackground';
import Navigation from '@/components/Navigation';
import HeroSection from '@/components/HeroSection';
import WhoWeAreSection from '@/components/WhoWeAreSection';
import WhatWeDoSection from '@/components/WhatWeDoSection';
import ContactUsSection from '@/components/ContactUsSection';
import CareersSection from '@/components/CareersSection';
import Team from '@/components/Team';
const HomePage = () => {
  const [mounted, setMounted] = useState(false);
  
const { scrollYProgress } = useScroll();
  
  useEffect(() => {
    setMounted(true);
  }, []);

  if (!mounted) return null;
  return (
    <div className="min-h-screen bg-white relative overflow-hidden">
      {/* Matrix Rain Background */}
      <MatrixBackground />
      
      {/* Cyber Grid Overlay */}
      <div className="fixed inset-0 bg-cyber-grid opacity-20 pointer-events-none" />
      
      {/* Navigation */}
     
      
      {/* Hero Section */}
      <HeroSection />
      <WhoWeAreSection />
      <WhatWeDoSection />
      {/* Threat Detection Visual */}
      
      
      {/* Security Dashboard */}
      
      
      {/* Advanced Stats */}
      <AdvancedStatsSection />

      <ContactUsSection/>
      <CareersSection/>
      {/* CTA Section */}
      {/* <AdvancedCTASection /> */}
      
      {/* Footer */}
     
    </div>
  );
};


// Threat Detection Section
const ThreatDetectionSection = () => {
  return (
    <section className="py-20 px-4 sm:px-6 lg:px-8 relative">
      <div className="max-w-7xl mx-auto">
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true }}
          className="text-center mb-16"
        >
          <div className="flex items-center justify-center space-x-4 mb-6">
            <div className="h-px w-20 bg-gradient-to-r from-transparent to-red-500" />
            <AlertTriangle className="h-6 w-6 text-red-500" />
            <span className="text-red-400     text-sm tracking-widest">THREAT INTELLIGENCE</span>
            <AlertTriangle className="h-6 w-6 text-red-500" />
            <div className="h-px w-20 bg-gradient-to-l from-transparent to-red-500" />
          </div>
          
          <h2 className="text-4xl lg:text-6xl font-bold mb-6    ">
            <span className="text-white">NEURAL THREAT</span>
            <br />
            <span className="text-red-500">DETECTION SYSTEM</span>
          </h2>
          
          <p className="text-xl text-gray-300 max-w-3xl mx-auto    ">
            Our advanced AI continuously monitors, analyzes, and neutralizes cyber threats
            before they can breach your systems.
          </p>
        </motion.div>

        <div className="grid lg:grid-cols-3 gap-8">
          {[
            {
              icon: Brain,
              title: "NEURAL ANALYSIS",
              description: "Deep learning algorithms analyze threat patterns and predict attack vectors",
              stats: "99.7% Accuracy",
              color: "from-blue-600 to-purple-600"
            },
            {
              icon: Zap,
              title: "REAL-TIME RESPONSE",
              description: "Millisecond response time with automated threat containment",
              stats: "<50ms Response",
              color: "from-red-600 to-orange-600"
            },
            {
              icon: Eye,
              title: "BEHAVIORAL MONITORING",
              description: "Advanced behavioral analysis detects anomalies and zero-day exploits",
              stats: "24/7 Vigilance",
              color: "from-green-600 to-teal-600"
            }
          ].map((feature, index) => (
            <ThreatDetectionCard key={index} feature={feature} index={index} />
          ))}
        </div>
      </div>
    </section>
  );
};

// Threat Detection Card
const ThreatDetectionCard = ({ feature, index }) => {
  return (
    <motion.div
      initial={{ opacity: 0, y: 30 }}
      whileInView={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.6, delay: index * 0.1 }}
      viewport={{ once: true }}
      whileHover={{ y: -10, scale: 1.02 }}
      className="group relative"
    >
      <div className="bg-black/60 border border-red-500/20 p-8 relative overflow-hidden group-hover:border-red-500/40 transition-all duration-500">
        {/* Background Pattern */}
        <div className="absolute inset-0 opacity-10">
          <div className="absolute inset-0 bg-cyber-dots" />
        </div>
        
        {/* Content */}
        <div className="relative z-10">
          <div className="mb-6">
            <div className={`w-16 h-16 bg-gradient-to-br ${feature.color} flex items-center justify-center relative group-hover:scale-110 transition-transform duration-300`}>
              <feature.icon className="h-8 w-8 text-white" />
              
              {/* Corner brackets */}
              <div className="absolute -top-1 -left-1 w-3 h-3 border-l border-t border-white/50" />
              <div className="absolute -top-1 -right-1 w-3 h-3 border-r border-t border-white/50" />
              <div className="absolute -bottom-1 -left-1 w-3 h-3 border-l border-b border-white/50" />
              <div className="absolute -bottom-1 -right-1 w-3 h-3 border-r border-b border-white/50" />
            </div>
          </div>
          
          <h3 className="text-xl font-bold text-white mb-3 group-hover:text-red-400 transition-colors     tracking-wider">
            {feature.title}
          </h3>
          
          <p className="text-gray-400 leading-relaxed mb-4     text-sm">
            {feature.description}
          </p>
          
          <div className="flex items-center justify-between">
            <span className="text-green-400     text-sm">{feature.stats}</span>
            <div className="flex items-center space-x-1">
              {[...Array(5)].map((_, i) => (
                <div key={i} className={`w-1 h-4 ${i < 4 ? 'bg-red-500' : 'bg-gray-600'}`} />
              ))}
            </div>
          </div>
        </div>
        
        {/* Scanning line effect */}
        <motion.div
          className="absolute top-0 left-0 w-full h-0.5 bg-gradient-to-r from-transparent via-red-500 to-transparent"
          animate={{
            y: [0, 320, 0],
            opacity: [0, 1, 0]
          }}
          transition={{
            duration: 3,
            delay: index * 0.5,
            repeat: Infinity,
            ease: "linear"
          }}
        />
      </div>
    </motion.div>
  );
};

// AI Security Engine Section
const AISecurityEngine = () => {
  return (
    <section className="py-20 px-4 sm:px-6 lg:px-8 bg-gradient-to-b from-red-950/20 to-black">
      <div className="max-w-7xl mx-auto">
        <div className="grid lg:grid-cols-2 gap-16 items-center">
          <motion.div
            initial={{ opacity: 0, x: -50 }}
            whileInView={{ opacity: 1, x: 0 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
          >
            <div className="space-y-6">
              <div className="flex items-center space-x-2 mb-4">
                <div className="w-2 h-2 bg-red-500 rounded-full animate-pulse" />
                <span className="text-red-400     text-sm tracking-widest">AI SECURITY ENGINE</span>
              </div>
              
              <h2 className="text-4xl lg:text-5xl font-bold    ">
                <span className="text-white">AUTONOMOUS</span>
                <br />
                <span className="text-red-500">CYBER DEFENSE</span>
              </h2>
              
              <p className="text-xl text-gray-300 leading-relaxed    ">
                Our AI-powered security engine operates independently, learning from every attack
                and evolving defenses in real-time.
              </p>
              
              <div className="space-y-4">
                {[
                  { label: "THREAT PREDICTION", value: "ACTIVE", status: "operational" },
                  { label: "AUTO REMEDIATION", value: "ENABLED", status: "operational" },
                  { label: "ZERO-DAY DETECTION", value: "ONLINE", status: "operational" },
                  { label: "BEHAVIORAL ANALYSIS", value: "RUNNING", status: "operational" },
                ].map((item, index) => (
                  <motion.div
                    key={index}
                    initial={{ opacity: 0, x: -20 }}
                    whileInView={{ opacity: 1, x: 0 }}
                    transition={{ duration: 0.5, delay: index * 0.1 }}
                    viewport={{ once: true }}
                    className="flex items-center justify-between bg-black/40 border border-red-500/20 p-4    "
                  >
                    <span className="text-gray-300">{item.label}</span>
                    <div className="flex items-center space-x-2">
                      <span className="text-green-400">{item.value}</span>
                      <div className="w-2 h-2 bg-green-400 rounded-full animate-pulse" />
                    </div>
                  </motion.div>
                ))}
              </div>
            </div>
          </motion.div>
          
          <motion.div
            initial={{ opacity: 0, x: 50 }}
            whileInView={{ opacity: 1, x: 0 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
          >
            <SecurityEngineVisualization />
          </motion.div>
        </div>
      </div>
    </section>
  );
};

// Security Engine Visualization
const SecurityEngineVisualization = () => {
  return (
    <div className="relative h-96 bg-black/60 border border-red-500/20 p-6 overflow-hidden">
      {/* Header */}
      <div className="flex items-center justify-between mb-6">
        <div className="flex items-center space-x-2">
          <ShieldCheck className="h-5 w-5 text-green-400" />
          <span className="text-green-400     text-sm">SECURITY ENGINE v2.1.5</span>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-2 h-2 bg-green-400 rounded-full animate-pulse" />
          <span className="text-gray-400     text-xs">OPERATIONAL</span>
        </div>
      </div>
      
      {/* Real-time Metrics */}
      <div className="grid grid-cols-2 gap-4 mb-6">
        <div className="bg-black/80 border border-green-500/30 p-3">
          <div className="text-green-400     text-xs">THREATS BLOCKED</div>
          <div className="text-2xl font-bold text-white    ">
            <CountUp end={1247} />
          </div>
        </div>
        <div className="bg-black/80 border border-blue-500/30 p-3">
          <div className="text-blue-400     text-xs">SCANS COMPLETED</div>
          <div className="text-2xl font-bold text-white    ">
            <CountUp end={98567} />
          </div>
        </div>
      </div>
      
      {/* Activity Log */}
      <div className="bg-black/80 border border-gray-600/30 p-4 h-40 overflow-y-auto">
        <div className="space-y-2     text-xs">
          <div className="text-green-400">[12:34:56] ✓ Malware signature updated</div>
          <div className="text-yellow-400">[12:34:52] ⚠ Suspicious activity detected</div>
          <div className="text-red-400">[12:34:48] ✗ DDoS attack blocked</div>
          <div className="text-green-400">[12:34:44] ✓ Firewall rules updated</div>
          <div className="text-blue-400">[12:34:40] ℹ Deep scan completed</div>
          <div className="text-green-400">[12:34:36] ✓ Intrusion attempt thwarted</div>
          <div className="text-yellow-400">[12:34:32] ⚠ Port scan detected</div>
          <div className="text-green-400">[12:34:28] ✓ AI model retrained</div>
        </div>
      </div>
      
      {/* Processing visualization */}
      <div className="absolute bottom-4 right-4">
        <motion.div
          className="w-8 h-8 border-2 border-red-500 border-t-transparent rounded-full"
          animate={{ rotate: 360 }}
          transition={{ duration: 1, repeat: Infinity, ease: "linear" }}
        />
      </div>
    </div>
  );
};

// Count Up Component
const CountUp = ({ end }) => {
  const [count, setCount] = useState(0);
  
  useEffect(() => {
    let start = 0;
    const increment = end / 100;
    const timer = setInterval(() => {
      start += increment;
      if (start >= end) {
        setCount(end);
        clearInterval(timer);
      } else {
        setCount(Math.floor(start));
      }
    }, 20);
    
    return () => clearInterval(timer);
  }, [end]);
  
  return <span>{count.toLocaleString()}</span>;
};

// Advanced Services Section
const AdvancedServicesSection = () => {
  const services = [
    {
      icon: Shield,
      title: "PENETRATION TESTING",
      subtitle: "Advanced VAPT Services",
      description: "Military-grade penetration testing with AI-enhanced vulnerability assessment",
      features: ["Network Penetration", "Web App Security", "Mobile Security", "API Testing"],
      threatLevel: "CRITICAL",
      color: "from-red-600 to-red-800"
    },
    {
      icon: Globe,
      title: "CLOUD FORTRESS",
      subtitle: "Cloud Security Suite",
      description: "Complete cloud infrastructure protection with real-time monitoring",
      features: ["AWS Security", "Azure Protection", "GCP Defense", "Multi-Cloud Management"],
      threatLevel: "HIGH",
      color: "from-orange-600 to-red-600"
    },
    {
      icon: Award,
      title: "COMPLIANCE ARMOR",
      subtitle: "Regulatory Compliance",
      description: "Automated compliance monitoring and reporting for industry standards",
      features: ["ISO 27001", "SOC 2", "GDPR", "HIPAA"],
      threatLevel: "MEDIUM",
      color: "from-yellow-600 to-orange-600"
    }
  ];

  return (
    <section className="py-20 px-4 sm:px-6 lg:px-8 bg-black">
      <div className="max-w-7xl mx-auto">
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true }}
          className="text-center mb-16"
        >
          <div className="flex items-center justify-center space-x-4 mb-6">
            <div className="h-px w-20 bg-gradient-to-r from-transparent to-red-500" />
            <Database className="h-6 w-6 text-red-500" />
            <span className="text-red-400     text-sm tracking-widest">SECURITY ARSENAL</span>
            <Database className="h-6 w-6 text-red-500" />
            <div className="h-px w-20 bg-gradient-to-l from-transparent to-red-500" />
          </div>
          
          <h2 className="text-4xl lg:text-6xl font-bold mb-6    ">
            <span className="text-white">ENTERPRISE GRADE</span>
            <br />
            <span className="text-red-500">SECURITY SOLUTIONS</span>
          </h2>
        </motion.div>

        <div className="grid lg:grid-cols-3 gap-8">
          {services.map((service, index) => (
            <AdvancedServiceCard key={index} service={service} index={index} />
          ))}
        </div>
      </div>
    </section>
  );
};

// Advanced Service Card
const AdvancedServiceCard = ({ service, index }) => {
  return (
    <motion.div
      initial={{ opacity: 0, y: 30 }}
      whileInView={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.6, delay: index * 0.2 }}
      viewport={{ once: true }}
      whileHover={{ scale: 1.02, y: -10 }}
      className="group relative"
    >
      <div className="bg-black/80 border border-red-500/20 p-8 relative overflow-hidden group-hover:border-red-500/40 transition-all duration-500">
        {/* Threat Level Badge */}
        <div className="absolute top-4 right-4">
          <div className={`px-3 py-1 text-xs     font-bold ${
            service.threatLevel === 'CRITICAL' ? 'bg-red-600 text-white' :
            service.threatLevel === 'HIGH' ? 'bg-orange-600 text-white' :
            'bg-yellow-600 text-black'
          }`}>
            {service.threatLevel}
          </div>
        </div>
        
        <div className="mb-6">
          <div className={`w-20 h-20 bg-gradient-to-br ${service.color} flex items-center justify-center relative group-hover:scale-110 transition-transform duration-300`}>
            <service.icon className="h-10 w-10 text-white" />
            
            {/* Scanning corners */}
            <div className="absolute -top-1 -left-1 w-4 h-4 border-l-2 border-t-2 border-white/70" />
            <div className="absolute -top-1 -right-1 w-4 h-4 border-r-2 border-t-2 border-white/70" />
            <div className="absolute -bottom-1 -left-1 w-4 h-4 border-l-2 border-b-2 border-white/70" />
            <div className="absolute -bottom-1 -right-1 w-4 h-4 border-r-2 border-b-2 border-white/70" />
          </div>
        </div>
        
        <div className="space-y-4">
          <div>
            <h3 className="text-2xl font-bold text-white group-hover:text-red-400 transition-colors     tracking-wider mb-1">
              {service.title}
            </h3>
            <div className="text-red-400     text-sm">{service.subtitle}</div>
          </div>
          
          <p className="text-gray-400 leading-relaxed     text-sm">
            {service.description}
          </p>
          
          <div className="space-y-2">
            <div className="text-white     text-sm mb-2">CAPABILITIES:</div>
            {service.features.map((feature, idx) => (
              <div key={idx} className="flex items-center text-gray-400     text-xs">
                <CheckCircle className="h-3 w-3 text-green-400 mr-2 flex-shrink-0" />
                <span>{feature}</span>
              </div>
            ))}
          </div>
          
          <div className="pt-4 border-t border-gray-700">
            <button className="w-full bg-gradient-to-r from-red-600 to-orange-600 text-white py-3     font-bold text-sm tracking-wider hover:from-red-500 hover:to-orange-500 transition-all duration-300">
              DEPLOY PROTECTION
            </button>
          </div>
        </div>
        
        {/* Background circuit pattern */}
        <div className="absolute inset-0 opacity-5">
          <div className="absolute inset-0 bg-cyber-grid" />
        </div>
      </div>
    </motion.div>
  );
};

// Security Dashboard Section
const SecurityDashboardSection = () => {
  return (
    <section className="py-20 px-4 sm:px-6 lg:px-8">
      <div className="max-w-7xl mx-auto">
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true }}
          className="text-center mb-16"
        >
          <h2 className="text-4xl lg:text-5xl font-bold mb-6    ">
            <span className="text-white">COMMAND & CONTROL</span>
            <br />
            <span className="text-red-500">DASHBOARD</span>
          </h2>
        </motion.div>
        
        <motion.div
          initial={{ opacity: 0, scale: 0.9 }}
          whileInView={{ opacity: 1, scale: 1 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true }}
          className="bg-black/80 border border-red-500/20 p-8 relative overflow-hidden"
        >
          <AdvancedSecurityDashboard />
        </motion.div>
      </div>
    </section>
  );
};

// Advanced Security Dashboard
const AdvancedSecurityDashboard = () => {
  return (
    <div className="space-y-8">
      {/* Header */}
      <div className="flex items-center justify-between border-b border-gray-700 pb-4">
        <div>
          <h3 className="text-xl font-bold text-white    ">VYNOX SECURITY CONTROL CENTER</h3>
          <div className="text-sm text-gray-400    ">Real-time Threat Monitoring & Response</div>
        </div>
        <div className="flex items-center space-x-4">
          <div className="flex items-center space-x-2">
            <div className="w-2 h-2 bg-green-400 rounded-full animate-pulse" />
            <span className="text-green-400     text-sm">SYSTEMS ONLINE</span>
          </div>
          <div className="text-gray-400     text-sm">
            {new Date().toLocaleString()}
          </div>
        </div>
      </div>
      
      {/* Main Dashboard Grid */}
      <div className="grid lg:grid-cols-3 gap-6">
        {/* Threat Level Monitoring */}
        <div className="lg:col-span-2 space-y-6">
          <div className="bg-black/60 border border-red-500/20 p-6">
            <h4 className="text-white     font-bold mb-4">THREAT LEVEL ANALYSIS</h4>
            <div className="space-y-4">
              {[
                { label: "NETWORK PERIMETER", level: 95, status: "SECURE", color: "bg-green-500" },
                { label: "WEB APPLICATIONS", level: 78, status: "MONITORED", color: "bg-yellow-500" },
                { label: "DATABASE SECURITY", level: 92, status: "PROTECTED", color: "bg-green-500" },
                { label: "API ENDPOINTS", level: 65, status: "VULNERABLE", color: "bg-red-500" },
                { label: "CLOUD INFRASTRUCTURE", level: 88, status: "DEFENDED", color: "bg-green-500" }
              ].map((item, index) => (
                <div key={index} className="space-y-2">
                  <div className="flex justify-between items-center">
                    <span className="text-gray-300     text-sm">{item.label}</span>
                    <div className="flex items-center space-x-2">
                      <span className="text-white     text-sm font-bold">{item.level}%</span>
                      <span className={`px-2 py-1 text-xs     ${
                        item.status === 'SECURE' || item.status === 'PROTECTED' || item.status === 'DEFENDED' ? 'text-green-400' :
                        item.status === 'MONITORED' ? 'text-yellow-400' : 'text-red-400'
                      }`}>
                        {item.status}
                      </span>
                    </div>
                  </div>
                  <div className="w-full bg-gray-800 h-2 relative overflow-hidden">
                    <motion.div
                      className={`h-2 ${item.color} relative`}
                      initial={{ width: 0 }}
                      whileInView={{ width: `${item.level}%` }}
                      transition={{ duration: 1, delay: index * 0.1 }}
                      viewport={{ once: true }}
                    />
                    <motion.div
                      className="absolute top-0 left-0 w-full h-full bg-gradient-to-r from-transparent via-white to-transparent opacity-30"
                      animate={{ x: [-100, 400] }}
                      transition={{ duration: 2, delay: index * 0.2, repeat: Infinity, ease: "linear" }}
                    />
                  </div>
                </div>
              ))}
            </div>
          </div>
          
          {/* Activity Feed */}
          <div className="bg-black/60 border border-red-500/20 p-6">
            <h4 className="text-white     font-bold mb-4">REAL-TIME ACTIVITY FEED</h4>
            <div className="h-48 overflow-y-auto space-y-2     text-sm">
              <div className="flex items-center space-x-2 text-green-400">
                <div className="w-1 h-1 bg-green-400 rounded-full" />
                <span>[14:23:17] Intrusion attempt blocked from 192.168.1.45</span>
              </div>
              <div className="flex items-center space-x-2 text-yellow-400">
                <div className="w-1 h-1 bg-yellow-400 rounded-full" />
                <span>[14:23:12] Suspicious file upload detected</span>
              </div>
              <div className="flex items-center space-x-2 text-red-400">
                <div className="w-1 h-1 bg-red-400 rounded-full" />
                <span>[14:23:08] DDoS attack mitigated (5.2GB/s peak)</span>
              </div>
              <div className="flex items-center space-x-2 text-blue-400">
                <div className="w-1 h-1 bg-blue-400 rounded-full" />
                <span>[14:23:05] AI model updated with new threat signatures</span>
              </div>
              <div className="flex items-center space-x-2 text-green-400">
                <div className="w-1 h-1 bg-green-400 rounded-full" />
                <span>[14:23:01] Malware quarantined successfully</span>
              </div>
              <div className="flex items-center space-x-2 text-purple-400">
                <div className="w-1 h-1 bg-purple-400 rounded-full" />
                <span>[14:22:58] Deep learning scan completed</span>
              </div>
            </div>
          </div>
        </div>
        
        {/* Statistics Panel */}
        <div className="space-y-6">
          <div className="bg-black/60 border border-green-500/30 p-6">
            <div className="text-center">
              <div className="text-3xl font-bold text-green-400    ">99.9%</div>
              <div className="text-sm text-gray-400    ">UPTIME</div>
            </div>
          </div>
          
          <div className="bg-black/60 border border-blue-500/30 p-6">
            <div className="text-center">
              <div className="text-3xl font-bold text-blue-400    ">24/7</div>
              <div className="text-sm text-gray-400    ">MONITORING</div>
            </div>
          </div>
          
          <div className="bg-black/60 border border-red-500/30 p-6">
            <div className="text-center">
              <div className="text-3xl font-bold text-red-400    ">1,247</div>
              <div className="text-sm text-gray-400    ">THREATS BLOCKED</div>
            </div>
          </div>
          
          <div className="bg-black/60 border border-yellow-500/30 p-6">
            <div className="text-center">
              <div className="text-3xl font-bold text-yellow-400    ">&lt;50ms</div>
              <div className="text-sm text-gray-400    ">RESPONSE TIME</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

// Threat Map Section
const ThreatMapSection = () => {
  return (
    <section className="py-20 px-4 sm:px-6 lg:px-8 bg-gradient-to-b from-black to-red-950/20">
      <div className="max-w-7xl mx-auto">
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true }}
          className="text-center mb-16"
        >
          <h2 className="text-4xl lg:text-5xl font-bold mb-6    ">
            <span className="text-white">GLOBAL THREAT</span>
            <br />
            <span className="text-red-500">INTELLIGENCE MAP</span>
          </h2>
          <p className="text-xl text-gray-300     max-w-3xl mx-auto">
            Real-time visualization of cyber threats detected and neutralized worldwide
          </p>
        </motion.div>
        
        <motion.div
          initial={{ opacity: 0, scale: 0.9 }}
          whileInView={{ opacity: 1, scale: 1 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true }}
          className="bg-black/80 border border-red-500/20 p-8 relative overflow-hidden"
        >
          <ThreatMapVisualization />
        </motion.div>
      </div>
    </section>
  );
};

// Threat Map Visualization
const ThreatMapVisualization = () => {
  return (
    <div className="relative h-96">
      {/* Map Background */}
      <div className="absolute inset-0 bg-gradient-to-br from-red-950/10 to-black opacity-50" />
      
      {/* Threat Indicators */}
      <div className="absolute inset-0">
        {[
          { top: '20%', left: '15%', severity: 'high', location: 'North America' },
          { top: '35%', left: '45%', severity: 'medium', location: 'Europe' },
          { top: '45%', left: '70%', severity: 'critical', location: 'Asia Pacific' },
          { top: '60%', left: '25%', severity: 'low', location: 'South America' },
          { top: '70%', left: '50%', severity: 'medium', location: 'Africa' },
        ].map((threat, index) => (
          <motion.div
            key={index}
            className={`absolute w-4 h-4 rounded-full ${
              threat.severity === 'critical' ? 'bg-red-500' :
              threat.severity === 'high' ? 'bg-orange-500' :
              threat.severity === 'medium' ? 'bg-yellow-500' :
              'bg-green-500'
            }`}
            style={{ top: threat.top, left: threat.left }}
            animate={{
              scale: [1, 1.5, 1],
              opacity: [0.7, 1, 0.7],
            }}
            transition={{
              duration: 2,
              delay: index * 0.3,
              repeat: Infinity,
            }}
          >
            <div className={`absolute inset-0 rounded-full ${
              threat.severity === 'critical' ? 'bg-red-500' :
              threat.severity === 'high' ? 'bg-orange-500' :
              threat.severity === 'medium' ? 'bg-yellow-500' :
              'bg-green-500'
            } animate-ping opacity-20`} />
          </motion.div>
        ))}
      </div>
      
      {/* Legend */}
      <div className="absolute bottom-4 left-4 bg-black/80 border border-gray-600/30 p-4">
        <h4 className="text-white     text-sm font-bold mb-2">THREAT SEVERITY</h4>
        <div className="space-y-2">
          <div className="flex items-center space-x-2">
            <div className="w-3 h-3 bg-red-500 rounded-full" />
            <span className="text-red-400     text-xs">CRITICAL</span>
          </div>
          <div className="flex items-center space-x-2">
            <div className="w-3 h-3 bg-orange-500 rounded-full" />
            <span className="text-orange-400     text-xs">HIGH</span>
          </div>
          <div className="flex items-center space-x-2">
            <div className="w-3 h-3 bg-yellow-500 rounded-full" />
            <span className="text-yellow-400     text-xs">MEDIUM</span>
          </div>
          <div className="flex items-center space-x-2">
            <div className="w-3 h-3 bg-green-500 rounded-full" />
            <span className="text-green-400     text-xs">LOW</span>
          </div>
        </div>
      </div>
      
      {/* Stats */}
      <div className="absolute bottom-4 right-4 bg-black/80 border border-gray-600/30 p-4">
        <div className="space-y-2     text-xs">
          <div className="text-white">THREATS DETECTED: <span className="text-red-400">847</span></div>
          <div className="text-white">ATTACKS BLOCKED: <span className="text-green-400">832</span></div>
          <div className="text-white">SUCCESS RATE: <span className="text-green-400">98.2%</span></div>
        </div>
      </div>
    </div>
  );
};

// Advanced Stats Section
const AdvancedStatsSection = () => {
  const stats = [
    { number: "50M+", label: "THREATS", suffix: "NEUTRALIZED", icon: Shield },
    { number: "99.8%", label: "DETECTION", suffix: "ACCURACY", icon: Eye },
    { number: "500+", label: "ENTERPRISE", suffix: "CLIENTS", icon: Users },
    { number: "<1ms", label: "RESPONSE", suffix: "TIME", icon: Zap }
  ];

  return (
    <section className="py-20 px-4 sm:px-6 lg:px-8 bg-white">
      <div className="max-w-7xl mx-auto">
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true }}
          className="text-center mb-16"
        >
          <h2 className="text-4xl lg:text-5xl font-bold mb-6 small   ">
            <span className="text-orange-500">BATTLEFIELD</span>
            <br />
            <span className="text-orange-500">STATISTICS</span>
          </h2>
        </motion.div>
        
        <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
          {stats.map((stat, index) => (
            <motion.div
              key={index}
              initial={{ opacity: 0, scale: 0.8 }}
              whileInView={{ opacity: 1, scale: 1 }}
              transition={{ duration: 0.6, delay: index * 0.1 }}
              viewport={{ once: true }}
              className="relative group"
            >
              <div className="bg-white border border-red-500/20 p-8 text-center relative overflow-hidden group-hover:border-red-500/40 transition-all duration-500">
                <div className="mb-4">
                  <stat.icon className="h-8 w-8 text-red-500 mx-auto" />
                </div>
                <div className="text-4xl lg:text-5xl font-bold text-black     mb-2">
                  {stat.number}
                </div>
                <div className="text-red-400     font-bold mb-1">{stat.label}</div>
                <div className="text-gray-700     text-sm">{stat.suffix}</div>
                
                {/* Corner brackets */}
                <div className="absolute top-2 left-2 w-4 h-4 border-l border-t border-red-500/50" />
                <div className="absolute top-2 right-2 w-4 h-4 border-r border-t border-red-500/50" />
                <div className="absolute bottom-2 left-2 w-4 h-4 border-l border-b border-red-500/50" />
                <div className="absolute bottom-2 right-2 w-4 h-4 border-r border-b border-red-500/50" />
              </div>
            </motion.div>
          ))}
        </div>
      </div>
    </section>
  );
};

// Advanced CTA Section
const AdvancedCTASection = () => {
  return (
    <section className="py-20 px-4 sm:px-6 lg:px-8 relative">
      {/* Background Effects */}
      <div className="absolute inset-0 bg-gradient-to-b from-red-950/20 to-black" />
      
      <div className="max-w-4xl mx-auto text-center relative z-10">
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true }}
          className="space-y-8"
        >
          <div className="space-y-6">
            <div className="flex items-center justify-center space-x-4 mb-8">
              <AlertTriangle className="h-8 w-8 text-red-500 animate-pulse" />
              <span className="text-red-400     text-lg tracking-widest">SECURITY BREACH IMMINENT</span>
              <AlertTriangle className="h-8 w-8 text-red-500 animate-pulse" />
            </div>
            
            <h2 className="text-4xl lg:text-6xl font-bold    ">
              <span className="text-white">DON'T WAIT FOR</span>
              <br />
              <span className="text-red-500">THE NEXT ATTACK</span>
            </h2>
            
            <p className="text-xl text-gray-300 max-w-2xl mx-auto     leading-relaxed">
              Every second your systems remain unprotected is a second closer to catastrophic breach.
              Deploy Vynox Security's AI-powered defense grid now.
            </p>
            
            <div className="bg-black/60 border border-red-500/20 p-6 max-w-2xl mx-auto">
              <div className="grid grid-cols-3 gap-4 text-center    ">
                <div>
                  <div className="text-2xl font-bold text-red-400">247</div>
                  <div className="text-xs text-gray-400">ATTACKS TODAY</div>
                </div>
                <div>
                  <div className="text-2xl font-bold text-orange-400">15.2s</div>
                  <div className="text-xs text-gray-400">AVG BREACH TIME</div>
                </div>
                <div>
                  <div className="text-2xl font-bold text-yellow-400">$4.35M</div>
                  <div className="text-xs text-gray-400">AVG BREACH COST</div>
                </div>
              </div>
            </div>
          </div>
          
          <div className="flex flex-col sm:flex-row gap-6 justify-center">
            <motion.button
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              className="group bg-gradient-to-r from-red-600 to-orange-600 text-white px-12 py-6     font-bold text-lg tracking-wider relative overflow-hidden border border-red-500/50"
            >
              <span className="relative z-10 flex items-center space-x-2">
                <span>ACTIVATE DEFENSE NOW</span>
                <ArrowRight className="h-5 w-5 group-hover:translate-x-1 transition-transform" />
              </span>
              <motion.div
                className="absolute inset-0 bg-gradient-to-r from-red-500 to-orange-500"
                initial={{ x: '-100%' }}
                whileHover={{ x: '0%' }}
                transition={{ duration: 0.3 }}
              />
            </motion.button>
            
            <motion.button
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              className="group border-2 border-red-500 text-red-400 px-12 py-6     font-bold text-lg tracking-wider hover:bg-red-500/10 transition-all duration-300 relative"
            >
              <span className="flex items-center space-x-2">
                <Terminal className="h-5 w-5" />
                <span>EMERGENCY CONSULTATION</span>
              </span>
            </motion.button>
          </div>
          
          <div className="text-center">
            <div className="inline-flex items-center space-x-2 bg-green-950/30 border border-green-500/30 px-4 py-2     text-sm">
              <div className="w-2 h-2 bg-green-400 rounded-full animate-pulse" />
              <span className="text-green-400">24/7 RAPID RESPONSE TEAM STANDING BY</span>
            </div>
          </div>
        </motion.div>
      </div>
    </section>
  );
};

// Advanced Footer


export default HomePage;
